.browse {
	background-color: var(--bgColor);
	padding: 0 calc(var(--sidebarSpaceOffset) - 20px);
	position: relative;
}

.browseContent {
	width: 100%;
	max-width: calc(var(--filterListWidth) + var(--contentMaxWidth) + var(--browseContentGap));
	min-height: calc(100vh - var(--headerHeight));
	padding: 25px 0 80px 0;
	margin: 0 auto;
	display: flex;
	flex-flow: row;
	align-items: flex-start;
	justify-content: flex-start;
	gap: var(--browseContentGap);

	@media screen and (max-width: 600px) {
		flex-flow: column;
	}
}

.list {
	flex: 1;
	display: flex;
	flex-direction: column;
	width: 100%;

	h1,
	p {
		color: var(--colorPrimaryForeground);
	}

	h1 {
		font-family: "GT Bold";
		font-size: 4em;

		@media screen and (max-width: 770px) {
			font-size: 40px;
		}

		@media screen and (max-width: 600px) {
			font-size: 48px;
		}

		@media screen and (max-width: 375px) {
			font-size: 38px;
		}
	}
}

.applied {
	max-width: var(--contentMaxWidth);
	display: flex;
	justify-content: space-between;

	.left {
		position: relative;
		display: flex;
		align-items: center;
		gap: 15px;
	}

	.placeholder {
		margin-right: 10px;

		.textButton {
			display: flex;
			align-items: center;
			gap: 10px;
		}

		span {
			color: var(--colorPrimaryForeground);
		}

		.icon {
			width: max-content;
			height: max-content;
			display: flex;
		}
	}

	button {
		span {
			color: var(--colorPrimaryForeground);
			font-family: "GT Bold";
		}
	}
}

.counterContainer {
	position: relative;
	display: flex;
	gap: 5px;

	span {
		font-weight: 700;
		color: var(--colorGraySecondary);
	}
}

.displayStyle {
	display: flex;
	align-items: center;
	gap: 8px;

	span {
		color: var(--colorGraySecondary);
		font-family: "GT Medium";

		@media screen and (max-width: 850px) {
			display: none;
		}
	}
}

.displayBtn {
	background-color: transparent;
	border: 1px transparent;
	border-radius: var(--borderRadius);
	outline: none;
	padding: 5px;
	display: flex;
	align-items: center;
	justify-content: center;
	transition: 100ms linear;
	cursor: pointer;

	&.isActive {
		background-color: var(--buttonActiveBackground);
		pointer-events: none;
	}

	&:hover {
		background-color: var(--buttonHoverBackground);
	}

	&:active {
		transform: scale(var(--scaleDownFactor));
	}

	* {
		pointer-events: none;
	}
}

.displayItem {
	transform: scale(0.9);
	transition: 100ms linear;
}
